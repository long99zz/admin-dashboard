{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\admin-dashboard\\\\src\\\\components\\\\layout\\\\home\\\\MapBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport Geocode from \"react-geocode\";\n\n// import axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapBox = _ref => {\n  _s();\n  let {\n    locationData\n  } = _ref;\n  Geocode.setApiKey(\"AIzaSyDNDRUgfCH2X8NQ2bPJvL-tCWVOMDDT5og\");\n  Geocode.setLanguage(\"en\");\n  Geocode.setRegion(\"in\");\n  Geocode.setLocationType(\"ROOFTOP\");\n\n  // Geocode.enableDebug();\n\n  // const [location, setLocation] = useState(\"Dehradun, Uttarakhand\");\n\n  const [coordinates, setCoordinates] = useState({\n    lat: 20.593684,\n    lng: 78.96288\n  });\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyDNDRUgfCH2X8NQ2bPJvL-tCWVOMDDT5og\"\n  });\n  const center = useMemo(() => coordinates, [coordinates]);\n  useEffect(() => {\n    // Get latitude & longitude from address.\n    Geocode.fromAddress(locationData).then(response => {\n      const {\n        lat,\n        lng\n      } = response.results[0].geometry.location;\n\n      // setting newly updated coordinates\n      setCoordinates({\n        lat: lat,\n        lng: lng\n      });\n    }, error => {\n      console.error(error);\n    });\n  }, [locationData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-wrapper mt-3\",\n    children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: \"map-container\",\n      center: center,\n      zoom: 15,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: coordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(MapBox, \"pVRkNegUw377YjS7ysImpXsyJRM=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapBox;\nexport default MapBox;\nvar _c;\n$RefreshReg$(_c, \"MapBox\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","GoogleMap","Marker","useLoadScript","Geocode","jsxDEV","_jsxDEV","MapBox","_ref","_s","locationData","setApiKey","setLanguage","setRegion","setLocationType","coordinates","setCoordinates","lat","lng","isLoaded","googleMapsApiKey","center","fromAddress","then","response","results","geometry","location","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerClassName","zoom","position","_c","$RefreshReg$"],"sources":["E:/Project/admin-dashboard/src/components/layout/home/MapBox.js"],"sourcesContent":["import React,{ useState, useEffect, useMemo } from \"react\";\r\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\r\nimport Geocode from \"react-geocode\";\r\n\r\n\r\n// import axios from \"axios\";\r\n\r\nconst MapBox = ({locationData})=>{\r\n    Geocode.setApiKey(\"AIzaSyDNDRUgfCH2X8NQ2bPJvL-tCWVOMDDT5og\");\r\n    Geocode.setLanguage(\"en\");\r\n    Geocode.setRegion(\"in\");\r\n    Geocode.setLocationType(\"ROOFTOP\");\r\n\r\n    // Geocode.enableDebug();\r\n\r\n\r\n    // const [location, setLocation] = useState(\"Dehradun, Uttarakhand\");\r\n\r\n    const [coordinates, setCoordinates] = useState({\r\n        lat:20.593684,\r\n        lng:78.96288\r\n    });\r\n\r\n    const {isLoaded } = useLoadScript({\r\n        googleMapsApiKey: \"AIzaSyDNDRUgfCH2X8NQ2bPJvL-tCWVOMDDT5og\"\r\n    });\r\n\r\n    const center = useMemo(()=>(coordinates),[coordinates])\r\n\r\n    useEffect(() => {\r\n\r\n        // Get latitude & longitude from address.\r\n        Geocode.fromAddress(locationData).then(\r\n            (response) => {\r\n            const { lat, lng } = response.results[0].geometry.location;\r\n\r\n            // setting newly updated coordinates\r\n            setCoordinates({\r\n                lat:lat,\r\n                lng:lng\r\n            })\r\n\r\n            },\r\n            (error) => {\r\n            console.error(error);\r\n            }\r\n        );      \r\n\r\n    }, [locationData])\r\n    \r\n\r\n    return(\r\n        <div className=\"map-wrapper mt-3\">\r\n            {\r\n                !isLoaded?(\r\n                    <p>loading...</p>\r\n                ):(\r\n                    <GoogleMap\r\n                        mapContainerClassName=\"map-container\"\r\n                        center={center}\r\n                        zoom={15}\r\n                    >\r\n                        <Marker position={coordinates} />\r\n                    </GoogleMap>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapBox"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,MAAM,EAAEC,aAAa,QAAQ,wBAAwB;AACzE,OAAOC,OAAO,MAAM,eAAe;;AAGnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAACC;EAAY,CAAC,GAAAF,IAAA;EAC1BJ,OAAO,CAACO,SAAS,CAAC,yCAAyC,CAAC;EAC5DP,OAAO,CAACQ,WAAW,CAAC,IAAI,CAAC;EACzBR,OAAO,CAACS,SAAS,CAAC,IAAI,CAAC;EACvBT,OAAO,CAACU,eAAe,CAAC,SAAS,CAAC;;EAElC;;EAGA;;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC;IAC3CmB,GAAG,EAAC,SAAS;IACbC,GAAG,EAAC;EACR,CAAC,CAAC;EAEF,MAAM;IAACC;EAAS,CAAC,GAAGhB,aAAa,CAAC;IAC9BiB,gBAAgB,EAAE;EACtB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGrB,OAAO,CAAC,MAAKe,WAAY,EAAC,CAACA,WAAW,CAAC,CAAC;EAEvDhB,SAAS,CAAC,MAAM;IAEZ;IACAK,OAAO,CAACkB,WAAW,CAACZ,YAAY,CAAC,CAACa,IAAI,CACjCC,QAAQ,IAAK;MACd,MAAM;QAAEP,GAAG;QAAEC;MAAI,CAAC,GAAGM,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ;;MAE1D;MACAX,cAAc,CAAC;QACXC,GAAG,EAACA,GAAG;QACPC,GAAG,EAACA;MACR,CAAC,CAAC;IAEF,CAAC,EACAU,KAAK,IAAK;MACXC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,CAAC,CACJ;EAEL,CAAC,EAAE,CAAClB,YAAY,CAAC,CAAC;EAGlB,oBACIJ,OAAA;IAAKwB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAEzB,CAACZ,QAAQ,gBACLb,OAAA;MAAAyB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAEjB7B,OAAA,CAACL,SAAS;MACNmC,qBAAqB,EAAC,eAAe;MACrCf,MAAM,EAAEA,MAAO;MACfgB,IAAI,EAAE,EAAG;MAAAN,QAAA,eAETzB,OAAA,CAACJ,MAAM;QAACoC,QAAQ,EAAEvB;MAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAExC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEH;AAEd,CAAC;AAAA1B,EAAA,CA7DKF,MAAM;EAAA,QAgBYJ,aAAa;AAAA;AAAAoC,EAAA,GAhB/BhC,MAAM;AA+DZ,eAAeA,MAAM;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}