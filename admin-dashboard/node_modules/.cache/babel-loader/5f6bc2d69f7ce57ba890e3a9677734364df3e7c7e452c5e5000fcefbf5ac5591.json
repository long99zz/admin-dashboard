{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\admin-dashboard\\\\src\\\\components\\\\layout\\\\charts\\\\PieChart.js\";\nimport React from 'react';\n// import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Chart } from \"react-google-charts\";\n// import CompanyData from \"../../../Data/data.json\";\n\n// ChartJS.register(ArcElement, Tooltip, Legend);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = _ref => {\n  let {\n    CompanyData,\n    dataName\n  } = _ref;\n  const donutData = {};\n  const mainDonutData = [[dataName, 'number']];\n  // const donutPieceColor = ['#AA77FF','#C9EEFF','#97DEFF','#62CDFF','#3E54AC','#7579E7','#B9FFFC','#9852F9','#C299FC'];\n\n  // const label = new Set();\n\n  CompanyData.forEach(i => {\n    if (i[dataName] === \"\") {\n      donutData[\"Others\"] = (donutData[\"Others\"] || 0) + 1;\n    } else {\n      donutData[i[dataName]] = (donutData[i[dataName]] || 0) + 1;\n    }\n  });\n\n  // console.log(donutData);\n\n  for (const [label, value] of Object.entries(donutData)) {\n    mainDonutData.push([label, value]);\n  }\n  // console.log(mainDonutData);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartType: \"PieChart\",\n    data: mainDonutData,\n    width: \"100%\",\n    height: \"100%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","PieChart","_ref","CompanyData","dataName","donutData","mainDonutData","forEach","i","label","value","Object","entries","push","chartType","data","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Project/admin-dashboard/src/components/layout/charts/PieChart.js"],"sourcesContent":["import React from 'react';\r\n// import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Chart } from \"react-google-charts\";\r\n// import CompanyData from \"../../../Data/data.json\";\r\n\r\n// ChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\n\r\n\r\nconst PieChart = ({CompanyData, dataName}) => {\r\n\r\n    const donutData = {};\r\n    const mainDonutData= [[dataName,'number']];\r\n    // const donutPieceColor = ['#AA77FF','#C9EEFF','#97DEFF','#62CDFF','#3E54AC','#7579E7','#B9FFFC','#9852F9','#C299FC'];\r\n\r\n    // const label = new Set();\r\n\r\n    CompanyData.forEach(i=>{\r\n      if(i[dataName] === \"\"){\r\n        donutData[\"Others\"] = (donutData[\"Others\"] || 0)+1;\r\n      }else{\r\n        donutData[i[dataName]] = (donutData[i[dataName]] || 0)+1;\r\n      }\r\n    });\r\n\r\n    // console.log(donutData);\r\n\r\n    for(const [label,value] of Object.entries(donutData)){\r\n      mainDonutData.push([\r\n        label,\r\n        value,\r\n      ])\r\n    }\r\n    // console.log(mainDonutData);\r\n  return (\r\n    <Chart chartType=\"PieChart\" data={mainDonutData} width={\"100%\"} height={\"100%\"}/>\r\n  )\r\n}\r\n\r\nexport default PieChart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,KAAK,QAAQ,qBAAqB;AAC3C;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,QAAQ,GAAGC,IAAA,IAA6B;EAAA,IAA5B;IAACC,WAAW;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAErC,MAAMG,SAAS,GAAG,CAAC,CAAC;EACpB,MAAMC,aAAa,GAAE,CAAC,CAACF,QAAQ,EAAC,QAAQ,CAAC,CAAC;EAC1C;;EAEA;;EAEAD,WAAW,CAACI,OAAO,CAACC,CAAC,IAAE;IACrB,IAAGA,CAAC,CAACJ,QAAQ,CAAC,KAAK,EAAE,EAAC;MACpBC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAACA,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAE,CAAC;IACpD,CAAC,MAAI;MACHA,SAAS,CAACG,CAAC,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAACC,SAAS,CAACG,CAAC,CAACJ,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAE,CAAC;IAC1D;EACF,CAAC,CAAC;;EAEF;;EAEA,KAAI,MAAM,CAACK,KAAK,EAACC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACP,SAAS,CAAC,EAAC;IACnDC,aAAa,CAACO,IAAI,CAAC,CACjBJ,KAAK,EACLC,KAAK,CACN,CAAC;EACJ;EACA;EACF,oBACEV,OAAA,CAACF,KAAK;IAACgB,SAAS,EAAC,UAAU;IAACC,IAAI,EAAET,aAAc;IAACU,KAAK,EAAE,MAAO;IAACC,MAAM,EAAE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAErF,CAAC;AAAAC,EAAA,GA5BKrB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}